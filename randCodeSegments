import requests

RIOT_API_KEY = 'YOUR_RIOT_API_KEY'
RIOT_API_URL = 'https://REGION.api.riotgames.com/lol/summoner/v4/summoners/by-name/'

def get_summoner_data(summoner_name):
    url = RIOT_API_URL.replace('REGION', 'YOUR_REGION') + summoner_name
    headers = {
        'X-Riot-Token': RIOT_API_KEY
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return None




@bot.command()
async def summoner(ctx, *, summoner_name):
    data = get_summoner_data(summoner_name)
    if data:
        await ctx.send(f"Summoner Name: {data['name']}\nSummoner Level: {data['summonerLevel']}")
    else:
        await ctx.send("Summoner not found or API error.")




## EXAMPLE:
import discord
from discord.ext import commands
import requests

# Replace with your actual tokens
DISCORD_BOT_TOKEN = 'YOUR_BOT_TOKEN'
RIOT_API_KEY = 'YOUR_RIOT_API_KEY'
RIOT_API_URL = 'https://<region>.api.riotgames.com/lol/summoner/v4/summoners/by-name/'

bot = commands.Bot(command_prefix='!')

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')

def get_summoner_data(summoner_name):
    url = RIOT_API_URL.replace('<region>', 'YOUR_REGION') + summoner_name
    headers = {
        'X-Riot-Token': RIOT_API_KEY
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return None

@bot.command()
async def summoner(ctx, *, summoner_name):
    data = get_summoner_data(summoner_name)
    if data:
        await ctx.send(f"Summoner Name: {data['name']}\nSummoner Level: {data['summonerLevel']}")
    else:
        await ctx.send("Summoner not found or API error.")

bot.run(DISCORD_BOT_TOKEN)




## Match Fetch
def get_match_history(encrypted_account_id):
    url = f'https://<region>.api.riotgames.com/lol/match/v4/matchlists/by-account/{encrypted_account_id}'
    headers = {
        'X-Riot-Token': RIOT_API_KEY
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return None

@bot.command()
async def matches(ctx, *, summoner_name):
    summoner_data = get_summoner_data(summoner_name)
    if summoner_data:
        account_id = summoner_data['accountId']
        match_history = get_match_history(account_id)
        if match_history:
            await ctx.send(f"Match History for {summoner_name}: {match_history['matches'][:5]}")
        else:
            await ctx.send("Could not retrieve match history.")
    else:
        await ctx.send("Summoner not found.")



## Match

MATCH_HISTORY_API_URL = 'https://<region>.api.riotgames.com/lol/match/v4/matchlists/by-account/'

def get_match_history(account_id, region):
    url = MATCH_HISTORY_API_URL.replace('<region>', region) + account_id
    headers = {
        'X-Riot-Token': RIOT_API_KEY
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return None


## COMPLETE EXAMPLE

import discord
from discord.ext import commands
import requests

# Replace with your actual tokens
DISCORD_BOT_TOKEN = 'YOUR_BOT_TOKEN'
RIOT_API_KEY = 'YOUR_RIOT_API_KEY'
SUMMONER_API_URL = 'https://<region>.api.riotgames.com/lol/summoner/v4/summoners/by-name/'
MATCH_HISTORY_API_URL = 'https://<region>.api.riotgames.com/lol/match/v4/matchlists/by-account/'

bot = commands.Bot(command_prefix='!')

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')

def get_summoner_data(summoner_name, region):
    url = SUMMONER_API_URL.replace('<region>', region) + summoner_name
    headers = {
        'X-Riot-Token': RIOT_API_KEY
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return None

def get_match_history(account_id, region):
    url = MATCH_HISTORY_API_URL.replace('<region>', region) + account_id
    headers = {
        'X-Riot-Token': RIOT_API_KEY
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return None

@bot.command()
async def matches(ctx, region, *, summoner_name):
    summoner_data = get_summoner_data(summoner_name, region)
    if summoner_data:
        account_id = summoner_data['accountId']
        match_history = get_match_history(account_id, region)
        if match_history:
            matches = match_history['matches']
            match_ids = [match['gameId'] for match in matches[:5]]  # Get the IDs of the last 5 matches
            await ctx.send(f"Last 5 Match IDs for {summoner_name}: {match_ids}")
        else:
            await ctx.send("Could not retrieve match history.")
    else:
        await ctx.send("Summoner not found.")

bot.run(DISCORD_BOT_TOKEN)


